definitions:
  backend_api_v1.GetProfileResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/backend_api_v1.GetProfileResponseData'
      message:
        type: string
    type: object
  backend_api_v1.GetProfileResponseData:
    properties:
      nickname:
        example: alan
        type: string
      userId:
        type: string
    type: object
  backend_api_v1.LoginRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  backend_api_v1.LoginResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/backend_api_v1.LoginResponseData'
      message:
        type: string
    type: object
  backend_api_v1.LoginResponseData:
    properties:
      accessToken:
        type: string
    type: object
  backend_api_v1.PageResponse-backend_api_v1_RobotResponseData:
    properties:
      items:
        items:
          $ref: '#/definitions/backend_api_v1.RobotResponseData'
        type: array
      total:
        type: integer
    type: object
  backend_api_v1.RegisterRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  backend_api_v1.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  backend_api_v1.RobotRequest:
    properties:
      callback:
        type: string
      desc:
        type: string
      enabled:
        type: boolean
      name:
        type: string
      options:
        type: string
      owner:
        type: string
      webhook:
        type: string
    required:
    - name
    type: object
  backend_api_v1.RobotResponseData:
    properties:
      callback:
        example: https://callback.example.com
        type: string
      createdAt:
        example: "2006-01-02 15:04:05"
        type: string
      desc:
        example: it's a robot
        type: string
      enabled:
        example: true
        type: boolean
      id:
        example: 1
        type: integer
      name:
        example: bot
        type: string
      options:
        example: '{"key": "value"}'
        type: string
      owner:
        example: Billy
        type: string
      robot_id:
        example: 454e7080-d105-4515-9c25-3e6fd9df176c
        type: string
      updatedAt:
        example: "2006-01-02 15:04:05"
        type: string
      webhook:
        example: https://webhook.example.com
        type: string
    type: object
  backend_api_v1.UpdateProfileRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      nickname:
        example: alan
        type: string
    required:
    - email
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Nunu Example API
  version: 1.0.0
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.LoginResponse'
      summary: 账号登录
      tags:
      - 用户模块
  /register:
    post:
      consumes:
      - application/json
      description: 目前只支持邮箱登录
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      summary: 用户注册
      tags:
      - 用户模块
  /robot:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.PageResponse-backend_api_v1_RobotResponseData'
      security:
      - Bearer: []
      summary: 获取机器人列表
      tags:
      - 机器人模块
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RobotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.RobotResponseData'
      security:
      - Bearer: []
      summary: 创建机器人
      tags:
      - 机器人模块
  /robot/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 机器人ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 删除机器人
      tags:
      - 机器人模块
    get:
      consumes:
      - application/json
      parameters:
      - description: 机器人ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.RobotResponseData'
      security:
      - Bearer: []
      summary: 获取机器人
      tags:
      - 机器人模块
    put:
      consumes:
      - application/json
      parameters:
      - description: 机器人ID
        in: path
        name: id
        required: true
        type: integer
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RobotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.RobotResponseData'
      security:
      - Bearer: []
      summary: 更新机器人
      tags:
      - 机器人模块
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.GetProfileResponse'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 用户模块
    put:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 修改用户信息
      tags:
      - 用户模块
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
