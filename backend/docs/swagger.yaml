definitions:
  CurrentUser:
    properties:
      avatar:
        example: https://example.com/avatar.jpg
        type: string
      createdAt:
        type: string
      email:
        example: zhangsan@example.com
        type: string
      nickname:
        example: 法外狂徒
        type: string
      phone:
        example: +86-13966668888
        type: string
      roles:
        example:
        - ""
        items:
          type: string
        type: array
      updatedAt:
        type: string
      userid:
        type: integer
      username:
        example: zhangsan
        type: string
    type: object
  LoginParams:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: zhangsan
        type: string
    required:
    - password
    - username
    type: object
  LoginResult:
    properties:
      accessToken:
        type: string
    type: object
  RegisterParams:
    properties:
      email:
        example: zhangsan@example.com
        type: string
      password:
        example: "123456"
        type: string
    required:
    - email
    - password
    type: object
  Robot:
    properties:
      callback:
        description: 回调地址
        example: https://example.com/callback
        type: string
      createdAt:
        description: 创建时间
        example: "2006-01-02 15:04:05"
        type: string
      desc:
        description: 描述
        example: It's a robot
        type: string
      enabled:
        description: 是否启用
        example: true
        type: boolean
      id:
        description: ID
        example: 1
        type: integer
      name:
        description: 名称
        example: bot
        type: string
      owner:
        description: 所有者
        example: Billy
        type: string
      updatedAt:
        description: 更新时间
        example: "2006-01-02 15:04:05"
        type: string
      webhook:
        description: 通知地址
        example: https://example.com/webhook
        type: string
    type: object
  RobotList:
    properties:
      list:
        description: 列表
        items:
          $ref: '#/definitions/Robot'
        type: array
      total:
        description: 总数
        type: integer
    type: object
  backend_api_v1.ApiCreateRequest:
    properties:
      group:
        example: 权限管理
        type: string
      method:
        example: GET
        type: string
      name:
        example: 菜单列表
        type: string
      path:
        example: /v1/xxx
        type: string
    type: object
  backend_api_v1.ApiDataItem:
    properties:
      createdAt:
        type: string
      group:
        type: string
      id:
        type: integer
      method:
        type: string
      name:
        type: string
      path:
        type: string
      updatedAt:
        type: string
    type: object
  backend_api_v1.ApiUpdateRequest:
    properties:
      group:
        example: 权限管理
        type: string
      id:
        example: 1
        type: integer
      method:
        example: GET
        type: string
      name:
        example: 菜单列表
        type: string
      path:
        example: /v1/xxx
        type: string
    required:
    - id
    type: object
  backend_api_v1.GetRolePermissionsData:
    properties:
      list:
        items:
          type: string
        type: array
    type: object
  backend_api_v1.GetUserPermissionsData:
    properties:
      list:
        items:
          type: string
        type: array
    type: object
  backend_api_v1.GetUserResponse:
    properties:
      data:
        $ref: '#/definitions/CurrentUser'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.ListApisResponse:
    properties:
      data:
        $ref: '#/definitions/backend_api_v1.ListApisResponseData'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.ListApisResponseData:
    properties:
      groups:
        items:
          type: string
        type: array
      list:
        items:
          $ref: '#/definitions/backend_api_v1.ApiDataItem'
        type: array
      total:
        type: integer
    type: object
  backend_api_v1.ListMenuResponse:
    properties:
      data:
        $ref: '#/definitions/backend_api_v1.ListMenuResponseData'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.ListMenuResponseData:
    properties:
      list:
        items:
          $ref: '#/definitions/backend_api_v1.MenuDataItem'
        type: array
    type: object
  backend_api_v1.ListRolesResponse:
    properties:
      data:
        $ref: '#/definitions/backend_api_v1.ListRolesResponseData'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.ListRolesResponseData:
    properties:
      list:
        items:
          $ref: '#/definitions/backend_api_v1.RoleDataItem'
        type: array
      total:
        type: integer
    type: object
  backend_api_v1.ListUsersResponse:
    properties:
      data:
        $ref: '#/definitions/backend_api_v1.ListUsersResponseData'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.ListUsersResponseData:
    properties:
      list:
        items:
          $ref: '#/definitions/backend_api_v1.UserDataItem'
        type: array
      total:
        type: integer
    type: object
  backend_api_v1.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/LoginResult'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.MenuCreateRequest:
    properties:
      component:
        description: 绑定的组件
        type: string
      hideInMenu:
        description: 是否保活
        type: boolean
      icon:
        description: 图标，使用字符串表示
        type: string
      keepAlive:
        description: 是否保活
        type: boolean
      locale:
        description: 本地化标识
        type: string
      name:
        description: 同路由中的name，唯一标识
        type: string
      parentId:
        description: 父级菜单的id，使用整数表示
        type: integer
      path:
        description: 地址
        type: string
      redirect:
        description: 重定向地址
        type: string
      title:
        description: 展示名称
        type: string
      url:
        description: iframe模式下的跳转url，不能与path重复
        type: string
      weight:
        description: 排序权重
        type: integer
    type: object
  backend_api_v1.MenuDataItem:
    properties:
      component:
        description: 绑定的组件
        type: string
      hideInMenu:
        description: 是否保活
        type: boolean
      icon:
        description: 图标，使用字符串表示
        type: string
      id:
        description: 唯一id，使用整数表示
        type: integer
      keepAlive:
        description: 是否保活
        type: boolean
      locale:
        description: 本地化标识
        type: string
      name:
        description: 同路由中的name，唯一标识
        type: string
      parentId:
        description: 父级菜单的id，使用整数表示
        type: integer
      path:
        description: 地址
        type: string
      redirect:
        description: 重定向地址
        type: string
      title:
        description: 展示名称
        type: string
      updatedAt:
        description: 是否保活
        type: string
      url:
        description: iframe模式下的跳转url，不能与path重复
        type: string
      weight:
        description: 排序权重
        type: integer
    type: object
  backend_api_v1.MenuUpdateRequest:
    properties:
      component:
        description: 绑定的组件
        type: string
      hideInMenu:
        description: 是否保活
        type: boolean
      icon:
        description: 图标，使用字符串表示
        type: string
      id:
        description: 唯一id，使用整数表示
        type: integer
      keepAlive:
        description: 是否保活
        type: boolean
      locale:
        description: 本地化标识
        type: string
      name:
        description: 同路由中的name，唯一标识
        type: string
      parentId:
        description: 父级菜单的id，使用整数表示
        type: integer
      path:
        description: 地址
        type: string
      redirect:
        description: 重定向地址
        type: string
      title:
        description: 展示名称
        type: string
      updatedAt:
        type: string
      url:
        description: iframe模式下的跳转url，不能与path重复
        type: string
      weight:
        description: 排序权重
        type: integer
    type: object
  backend_api_v1.Response:
    properties:
      data: {}
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.RobotRequest:
    properties:
      callback:
        description: 回调地址
        example: https://example.com/callback
        type: string
      desc:
        description: 描述
        example: It's a robot
        type: string
      enabled:
        description: 是否启用
        example: true
        type: boolean
      name:
        description: 名称
        example: bot
        type: string
      owner:
        description: 所有者
        example: Billy
        type: string
      webhook:
        description: 通知地址
        example: https://example.com/webhook
        type: string
    type: object
  backend_api_v1.RobotResponse:
    properties:
      data:
        $ref: '#/definitions/Robot'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.RobotSearchResponse:
    properties:
      data:
        $ref: '#/definitions/RobotList'
      errorCode:
        description: 错误码
        type: integer
      errorMessage:
        description: 报错信息
        type: string
      errorShowType:
        description: 前端展示方式
        type: integer
      success:
        type: boolean
    type: object
  backend_api_v1.RoleCreateRequest:
    properties:
      name:
        example: Admin
        type: string
      sid:
        example: "1"
        type: string
    required:
    - name
    - sid
    type: object
  backend_api_v1.RoleDataItem:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      sid:
        type: string
      updatedAt:
        type: string
    type: object
  backend_api_v1.RoleUpdateRequest:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: Admin
        type: string
      sid:
        example: "1"
        type: string
    required:
    - id
    - name
    - sid
    type: object
  backend_api_v1.UpdateRolePermissionRequest:
    properties:
      list:
        example:
        - ""
        items:
          type: string
        type: array
      role:
        example: admin
        type: string
    required:
    - list
    - role
    type: object
  backend_api_v1.UserCreateRequest:
    properties:
      email:
        example: zhangsan@example.com
        type: string
      nickname:
        example: 法外狂徒
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: +86-13966668888
        type: string
      roles:
        example:
        - ""
        items:
          type: string
        type: array
      username:
        example: zhangsan
        type: string
    required:
    - password
    - username
    type: object
  backend_api_v1.UserDataItem:
    properties:
      createdAt:
        type: string
      email:
        example: zhangsan@example.com
        type: string
      id:
        type: integer
      nickname:
        example: 法外狂徒
        type: string
      phone:
        example: +86-13966668888
        type: string
      roles:
        example:
        - ""
        items:
          type: string
        type: array
      updatedAt:
        type: string
      username:
        example: zhangsan
        type: string
    required:
    - email
    - nickname
    - username
    type: object
  backend_api_v1.UserUpdateRequest:
    properties:
      email:
        example: zhangsan@example.com
        type: string
      id:
        type: integer
      nickname:
        example: 法外狂徒
        type: string
      password:
        example: "123456"
        type: string
      phone:
        example: +86-13966668888
        type: string
      roles:
        example:
        - ""
        items:
          type: string
        type: array
      username:
        example: zhangsan
        type: string
    required:
    - username
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Robot Shop
  version: 1.0.0
paths:
  /admin/api:
    delete:
      consumes:
      - application/json
      description: 删除指定API
      parameters:
      - description: API ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 删除API
      tags:
      - API
    post:
      consumes:
      - application/json
      description: 创建新的API
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.ApiCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 创建API
      tags:
      - API
    put:
      consumes:
      - application/json
      description: 更新API信息
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.ApiUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新API
      tags:
      - API
  /admin/apis:
    get:
      consumes:
      - application/json
      description: 获取API列表
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: API分组
        in: query
        name: group
        type: string
      - description: API名称
        in: query
        name: name
        type: string
      - description: API路径
        in: query
        name: path
        type: string
      - description: 请求方法
        in: query
        name: method
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.ListApisResponse'
      security:
      - Bearer: []
      summary: 获取API列表
      tags:
      - API
  /admin/menu:
    delete:
      consumes:
      - application/json
      description: 删除指定菜单
      parameters:
      - description: 菜单ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - Menu
    post:
      consumes:
      - application/json
      description: 创建新的菜单
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.MenuCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 创建菜单
      tags:
      - Menu
    put:
      consumes:
      - application/json
      description: 更新菜单信息
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.MenuUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新菜单
      tags:
      - Menu
  /admin/menus:
    get:
      consumes:
      - application/json
      description: 获取菜单列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.ListMenuResponse'
      security:
      - Bearer: []
      summary: 获取菜单列表
      tags:
      - Menu
  /admin/role:
    delete:
      consumes:
      - application/json
      description: 删除指定角色
      parameters:
      - description: 角色ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 删除角色
      tags:
      - Role
    post:
      consumes:
      - application/json
      description: 创建新的角色
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RoleCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 创建角色
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: 更新角色信息
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RoleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新角色
      tags:
      - Role
  /admin/role/permissions:
    get:
      consumes:
      - application/json
      description: 获取指定角色的权限列表
      parameters:
      - description: 角色名称
        in: query
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.GetRolePermissionsData'
      security:
      - Bearer: []
      summary: 获取角色权限
      tags:
      - Role
    put:
      consumes:
      - application/json
      description: 更新指定角色的权限列表
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.UpdateRolePermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新角色权限
      tags:
      - Role
  /admin/roles:
    get:
      consumes:
      - application/json
      description: 获取角色列表
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 角色ID
        in: query
        name: sid
        type: string
      - description: 角色名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.ListRolesResponse'
      security:
      - Bearer: []
      summary: 获取角色列表
      tags:
      - Role
  /admin/user:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: 用户ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - User
    post:
      consumes:
      - application/json
      description: 创建用户
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 创建用户
      tags:
      - User
    put:
      consumes:
      - application/json
      description: 更新用户
      parameters:
      - description: 参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新用户
      tags:
      - User
  /admin/user/permissions:
    get:
      consumes:
      - application/json
      description: 获取当前用户的权限列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.GetUserPermissionsData'
      security:
      - Bearer: []
      summary: 获取用户权限
      tags:
      - User
  /admin/users:
    get:
      consumes:
      - application/json
      description: 获取用户列表
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 昵称
        in: query
        name: nickname
        type: string
      - description: 手机号
        in: query
        name: phone
        type: string
      - description: 邮箱
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.ListUsersResponse'
      security:
      - Bearer: []
      summary: 获取用户列表
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: 支持用户名或邮箱登录
      operationId: login
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LoginParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.LoginResponse'
      summary: 账号登录
      tags:
      - User
  /menu:
    get:
      consumes:
      - application/json
      description: 获取当前用户的菜单列表
      operationId: queryCurrentMenu
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.ListMenuResponse'
      security:
      - Bearer: []
      summary: 获取当前用户菜单
      tags:
      - Menu
  /register:
    post:
      consumes:
      - application/json
      description: 目前只支持邮箱注册
      operationId: register
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RegisterParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      summary: 用户注册
      tags:
      - User
  /robots:
    get:
      consumes:
      - application/json
      operationId: ListRobots
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 分页大小
        in: query
        name: pageSize
        required: true
        type: integer
      - description: 名称
        in: query
        name: name
        type: string
      - description: 描述
        in: query
        name: desc
        type: string
      - description: 所有者
        in: query
        name: owner
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.RobotSearchResponse'
      security:
      - Bearer: []
      summary: 批量搜索机器人
      tags:
      - Robot
    post:
      consumes:
      - application/json
      operationId: CreateRobot
      parameters:
      - description: 机器人数据
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RobotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 创建机器人
      tags:
      - Robot
  /robots/{id}:
    delete:
      consumes:
      - application/json
      operationId: DeleteRobot
      parameters:
      - description: 机器人ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 删除机器人
      tags:
      - Robot
    get:
      consumes:
      - application/json
      operationId: GetRobot
      parameters:
      - description: 机器人ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.RobotResponse'
      security:
      - Bearer: []
      summary: 查找机器人
      tags:
      - Robot
    put:
      consumes:
      - application/json
      operationId: UpdateRobot
      parameters:
      - description: 机器人ID
        in: path
        name: id
        required: true
        type: integer
      - description: 机器人数据
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/backend_api_v1.RobotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.Response'
      security:
      - Bearer: []
      summary: 更新机器人
      tags:
      - Robot
  /user:
    get:
      consumes:
      - application/json
      description: 获取当前用户的详细信息
      operationId: queryCurrentUser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backend_api_v1.GetUserResponse'
      security:
      - Bearer: []
      summary: 获取当前用户
      tags:
      - User
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
